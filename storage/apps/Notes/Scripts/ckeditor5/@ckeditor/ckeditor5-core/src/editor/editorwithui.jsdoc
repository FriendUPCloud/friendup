/**
 * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.
 * For licensing, see LICENSE.md.
 */

/**
 * @module core/editor/editorwithui
 */

/**
 * Interface defining a type of {@link module:core/editor/editor~Editor editor} which has a UI.
 *
 * Most editors (like {@link module:editor-classic/classiceditor~ClassicEditor} or
 * {@link module:editor-inline/inlineeditor~InlineEditor}) implement this interface, however, it is not required to do so.
 *
 * Editors with an external UI (i.e. Bootstrap-based) or a headless editor may not implement this interface.
 * When developing editor features you can consider this by splitting them into two parts: the "editing" part,
 * which bases on {@link module:core/editor/editor~Editor} itself, and the UI part which bases on this interface.
 * This will make your features compatible with more types of editors.
 *
 * @interface EditorWithUI
 */

/**
 * The editor UI instance.
 *
 * @readonly
 * @member {module:core/editor/editorui~EditorUI} #ui
 */

 /**
  * The main (outermost) DOM element of the editor UI.
  *
  * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which
  * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}
  * it is the editable element itself (as there is no other wrapper). However, in
  * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not
  * come with a single "main" HTML element (its editable element and toolbar are separate).
  *
  * This property can be understood as a shorthand for retrieving the element that a specific editor integration
  * considers to be its main DOM element. There are always other ways to access these elements, too
  * (e.g. via {@link #ui `editor.ui`}).
  *
  * @readonly
  * @member {HTMLElement|null} #element
  */

/**
 * Fired when the editor UI is ready.
 *
 * Fired after {@link module:core/editor/editor~Editor#event:pluginsReady} and before
 * {@link module:core/editor/editor~Editor#event:dataReady}.
 *
 * @event uiReady
 */
