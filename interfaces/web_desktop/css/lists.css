
/** Tables ********************************************************************/
.List
{
	width: 100%;
	border-collapse: $TblListsBorderCollapse;
	border-spacing: $TblListsBorderSpacing;
	background-color: $ColorBgTdListTable;
}
.List tr th.Active
{
	background: #e4e4e4;
}
.List tr th
{
	padding: $PaddingListsTh;
	background-color: $ColorBgThListSw1;
	color: $ColorThListSw1;
	font-weight: $FontWeightThList;
	text-align: left;
	text-transform: $FontTransformThList;
	text-shadow: $TxtShdThList;
}
.List tr.sw2 th
{
	background-color: $ColorBgThListSw2;
	color: $ColorThListSw2;
}

.List tr td
{
	padding: $PaddingListsTd;
	text-shadow: $TxtShdTdList;
}
.List tr.sw1,
.List div.sw1
{
	background-color: $ColorBgListSw1;
	color: $ColorTdListSw1;
}
.List tr.sw2,
.List .sw2
{
	background-color: $ColorBgListSw2;
	color: $ColorTdListSw2;
}
.List tr.sw1.Selected,
.List div.sw1.Selected
{
	background-color: $ColorAcceptButtonBg;
	color: $ColorAcceptButton;
}
.List tr.sw2.Selected,
.List .sw2.Selected
{
	background-color: $ColorAcceptButtonBg;
	color: $ColorAcceptButton;
}
.List td.Number, .List th.Number,
.List div.Number
{
	text-align: right;
}

.List button
{
	margin: 0 2px 0 0;
	padding: 4px 3px;
}

.List button > img
{
	position: relative;
	top: 1px; left: 1px;
}

/* Alternating list divs ---------------------------------------------------- */

.BackgroundNegativeAlt .Selected
{
	background-color: $ColorNegative;
	color:            $ColorNegativeAlt;
}

.BackgroundNegativeAlt .Selected a
{
	color:            $ColorNegativeAlt;
}

.BackgroundLists .sw1
{
	background: $ColorBgListSw1;
	color: $ColorListSw1;
}

.BackgroundLists .sw2
{
	background: $ColorBgListSw2;
	color: $ColorListSw2;
}

/* .ZebraList */

.ZebraList {}
.ZebraList > tr,
.ZebraList > div {
	background: $ColorBgListSw1;
	color: $ColorListSw1;
}
.ZebraList > tr .PadBorder,
.ZebraList > div .PadBorder {
	border-color : $ColorBgListSw1;
}

.ZebraList > tr .PadBackground,
.ZebraList > div .PadBackground {
	background-color : $ColorBgListSw1;
}

.ZebraList > tr:nth-child( 2n ),
.ZebraList > div:nth-child( 2n )
{
	background: $ColorBgListSw2;
	color: $ColorListSw2;
}
.ZebraList > tr:nth-child( 2n ) .PadBorder,
.ZebraList > div:nth-child( 2n ) .PadBorder
{
	border-color : $ColorBgListSw2;
}

.ZebraList > tr:nth-child( 2n ) .PadBackground,
.ZebraList > div:nth-child( 2n ) .PadBackground
{
	background-color : $ColorBgListSw2;
}

.ZebraList.Interactive > tr:hover,
.ZebraList.Interactive > div:hover
{
	background-color : $ColorBgListSwHover;
}

.ZebraList.Interactive > tr:hover .PadBorder,
.ZebraList.Interactive > div:hover .PadBorder
{
	border-color : $ColorBgListSwHover;
}

.ZebraList.Interactive > tr:hover .PadBackground,
.ZebraList.Interactive > div:hover .PadBackground
{
	background-color : $ColorBgListSwHover;
}

.ZebraList > div, .BackgroundLists > div
{
	padding: $PaddingListsTd;
	box-sizing: border-box;
}

.ZebraList > div.Columns, .BackgroundLists > div.Columns
{
	padding: 0;
}

.ZebraList > div.Columns > div, .BackgroundLists > div.Columns > div
{
	padding: $PaddingListsTd;
	box-sizing: border-box;
}

/* Ul list */

ul.List
{
	list-style: none;
	box-sizing: border-box;
	background-color: none;
	margin: 0;
	padding: 0;
}

ul.List > li
{
	list-style: none;
	display: block;
	padding: $PaddingListsTd;
	padding-left: $PaddingBox;
	box-sizing: border-box;
}

/*ul.List > li:first-child
{
	border-radius: 5px 5px 0 0;
}

ul.List > li:last-child
{
	border-radius: 0 0 5px 5px;
}*/

ul.List > li:nth-child(odd)
{
	background: $ColorBgListSw1;
	color: $ColorListSw1;
}

ul.List > li:nth-child(even)
{
	background: $ColorBgListSw2;
	color: $ColorListSw2;
}

ul.Negative.List > li:nth-child(odd)
{
	background: $ColorBgNegativeListSw1;
	color: $ColorNegativeListSw1;
}

ul.Negative.List > li:nth-child(even)
{
	background: $ColorBgNegativeListSw2;
	color: $ColorNegativeListSw2;
}

/* Plain lists */

.ListItemPlain
{
	transition: background-color 0.25s;
	background-color: rgba(255,255,255,0);
	border-radius: 2px;
}

.ListItemPlain:hover
{
	background-color: rgba(180,180,180,0.15);
}

